               Mongo DB
////////////////////////////////////////////
Introduction to MongoDB ðŸŒ³
MongoDB is a document database designed for ease of development and scaling. It is one of the most powerful No SQL system and database. 
This database use a document storage format called BSON which is a binary style of JSON document.
Being a No SQL means that it does not use the usual rows and columns.


BSON format is look like JSON with datatypes.

Example 
Here you can see different datatype are store in the form of JSON..ðŸ˜Š

{
    _id: Object('2343333jh2j),
    name: "malik",
    hobbies: ['cricker', 'reading],
    city: "karachi",
    islogin: true
}



Understand more about BSON format...

BSON format consist of field, document, and collections


//  collection 1

{
    _id: Object('2343333jh2j),            | 
    name: "malik",                        |
    hobbies: ['cricker', 'reading],       |=> the hole object is called document 1 
    city: "karachi",                      |
    islogin: true                         |
}

{
    _id: Object('2343333jh2j),  => one row called field, in this obj we have 5 field.
    name: "malik",                        |
    hobbies: ['cricker', 'reading],       |=> similarly this is document 2
    city: "karachi",                      |
    islogin: true
}


//  collection 2

{
    _id: Object('2343333jh2j),            | 
    name: "malik",                        |
    hobbies: ['cricker', 'reading],       |=>  
    city: "karachi",                      |
    islogin: true                         |
}

{
    _id: Object('2343333jh2j),  
    name: "malik",                        |
    hobbies: ['cricker', 'reading],       |=> 
    city: "karachi",                      |
    islogin: true
}

For more Understanding see image name NoSQLvsSQL.PNG

//////////////////////////////////////////////////////
More Terminologies...

Database: in MongoDB, database hold one or more collection.

Collection: MongoDB stores documents in collections. Collection are analogous to tables in relational database.

Document: A document is a set of key-value pairs. The document in a single collection do not need to have the same
          set of fields and the data type for a field can differ across document within a collection.

Mongo: mongo is the command line shell that connect to a specific instance on mongod. When you run mongo with no parameter
       it defaults to connecting to the localhost on port 27017.

Mongod: Mongod is the primary daemon process for the MongoDB. system. It handles data requests, manage data access, and 
        performs background management operations

Mongos: For a sharded cluster, the mongos instance provide the interface between the cliendt applications and the sharded cluster. The mongos instance route queries
        and write operations to the shards. From the perspective of the application, a mongos instance behaves identically to any other MongoDB to any other MongoDB 
        instance.

Mongosh: THe MongoDB shell, mongosh is fully functionally JavaScript and Node.js 14x REPL environment for intereacting with MongoDB deployments. You can use the
          MongoDB shell to test the queries and operations.

////////////////////////////
MongoDB Deployment Options:
    Locally Hosted Deployments
        - MongoDB Community  // we use for learning.
        - MongoDB Enterprise Advance

    Cloud Hosted Deployment 
       - MongoDB Altas

//////////////////////////
download from here: https://www.mongodb.com/try/download/community
